<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MyLab.Logging</name>
    </assembly>
    <members>
        <member name="T:MyLab.Logging.AttributeNames">
            <summary>
            Predefined log attribute names
            </summary>
        </member>
        <member name="F:MyLab.Logging.AttributeNames.Exception">
            <summary>
            Exception
            </summary>
        </member>
        <member name="F:MyLab.Logging.AttributeNames.Conditions">
            <summary>
            Conditions
            </summary>
        </member>
        <member name="T:MyLab.Logging.ExceptionCondition">
            <summary>Contains condition for exception</summary>
        </member>
        <member name="P:MyLab.Logging.ExceptionCondition.Key">
            <summary>Key</summary>
        </member>
        <member name="P:MyLab.Logging.ExceptionCondition.Value">
            <summary>Value</summary>
        </member>
        <member name="M:MyLab.Logging.ExceptionCondition.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of <see cref="T:MyLab.Logging.ExceptionCondition" />
            </summary>
        </member>
        <member name="T:MyLab.Logging.ExceptionDto">
            <summary>
            Exception log model
            </summary>
        </member>
        <member name="P:MyLab.Logging.ExceptionDto.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:MyLab.Logging.ExceptionDto.StackTrace">
            <summary>
            Stack trace
            </summary>
        </member>
        <member name="P:MyLab.Logging.ExceptionDto.Type">
            <summary>
            .NET type
            </summary>
        </member>
        <member name="P:MyLab.Logging.ExceptionDto.Aggregated">
            <summary>
            Array of aggregated exceptions when origin exception is <see cref="T:System.AggregateException"/>
            </summary>
        </member>
        <member name="P:MyLab.Logging.ExceptionDto.Inner">
            <summary>
            Inner exception
            </summary>
        </member>
        <member name="P:MyLab.Logging.ExceptionDto.Conditions">
            <summary>
            Exception conditions
            </summary>
        </member>
        <member name="P:MyLab.Logging.ExceptionDto.Markers">
            <summary>
            Markers from exception
            </summary>
        </member>
        <member name="M:MyLab.Logging.ExceptionDto.Create(System.Exception)">
            <summary>
            Creates <see cref="T:MyLab.Logging.ExceptionDto"/> from <see cref="T:System.Exception"/>
            </summary>
        </member>
        <member name="T:MyLab.Logging.ExceptionExtensions">
            <summary>
            Extensions for <see cref="T:System.Exception" />
            </summary>
        </member>
        <member name="M:MyLab.Logging.ExceptionExtensions.AndFactIs(System.Exception,System.String,System.Object)">
            <summary>Adds condition</summary>
        </member>
        <member name="M:MyLab.Logging.ExceptionExtensions.GetConditions(System.Exception)">
            <summary>Gets conditions for Exception</summary>
        </member>
        <member name="M:MyLab.Logging.ExceptionExtensions.AndMarkAs(System.Exception,System.String)">
            <summary>Adds marker for exception</summary>
        </member>
        <member name="M:MyLab.Logging.ExceptionExtensions.GetMarkers(System.Exception)">
            <summary>Gets markers for Exception</summary>
        </member>
        <member name="T:MyLab.Logging.ILogAttributeStringValue">
            <summary>
            Converts object to attribute string value
            </summary>
        </member>
        <member name="M:MyLab.Logging.ILogAttributeStringValue.ToLogString">
            <summary>
            Converts object to attribute string value
            </summary>
        </member>
        <member name="T:MyLab.Logging.LogEntity">
            <summary>
            Contains log item data
            </summary>
        </member>
        <member name="P:MyLab.Logging.LogEntity.EventId">
            <summary>
            Event identifier
            </summary>
        </member>
        <member name="P:MyLab.Logging.LogEntity.Id">
            <summary>
            Event instance identifier
            </summary>
        </member>
        <member name="P:MyLab.Logging.LogEntity.Time">
            <summary>
            Occurence time
            </summary>
        </member>
        <member name="P:MyLab.Logging.LogEntity.Content">
            <summary>
            Log message
            </summary>
        </member>
        <member name="P:MyLab.Logging.LogEntity.Markers">
            <summary>
            Markers
            </summary>
        </member>
        <member name="P:MyLab.Logging.LogEntity.Attributes">
            <summary>
            Attributes
            </summary>
        </member>
        <member name="T:MyLab.Logging.LogEntityAttribute">
            <summary>
            Contains named data
            </summary>
        </member>
        <member name="P:MyLab.Logging.LogEntityAttribute.Name">
            <summary>
            Gets or sets attribute name
            </summary>
        </member>
        <member name="P:MyLab.Logging.LogEntityAttribute.Value">
            <summary>
            Gets or sets attribute value
            </summary>
        </member>
        <member name="M:MyLab.Logging.LogEntityAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:MyLab.Logging.LogEntityAttribute"/>
            </summary>
        </member>
        <member name="M:MyLab.Logging.LogEntityAttribute.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of <see cref="T:MyLab.Logging.LogEntityAttribute"/>
            </summary>
        </member>
        <member name="T:MyLab.Logging.LogEntityFormatter">
            <summary>
            Converts <see cref="T:MyLab.Logging.LogEntity"/> to string
            </summary>
        </member>
        <member name="F:MyLab.Logging.LogEntityFormatter.Func">
            <summary>
            Formatter function
            </summary>
        </member>
        <member name="T:MyLab.Logging.Markers">
            <summary>
            Predefined log markers
            </summary>
        </member>
        <member name="F:MyLab.Logging.Markers.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:MyLab.Logging.Markers.Debug">
            <summary>
            Debug
            </summary>
        </member>
        <member name="F:MyLab.Logging.Markers.Warning">
            <summary>
            Warning
            </summary>
        </member>
    </members>
</doc>
